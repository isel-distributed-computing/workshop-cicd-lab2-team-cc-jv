{
	"info": {
		"_postman_id": "b888053e-6a87-4663-b52a-ba93c07f477b",
		"name": "CI-CD MICROSERVICES",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "SessÃ£o4",
			"item": [
				{
					"name": "01 - Criar utilizador",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type header is text/plain\", () => {\r",
									"pm.expect(pm.response.headers.get('Content-Type')).to.include('text/plain');\r",
									"});\r",
									"pm.test(\"Response time is less than 3000ms\", () => {\r",
									"pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"me2\",\r\n  \"password\": \"changeit\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://authuser-cicd:8080/user/register",
							"protocol": "http",
							"host": [
								"authuser-cicd"
							],
							"port": "8080",
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "02 - Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type header is text/plain\", () => {\r",
									"pm.expect(pm.response.headers.get('Content-Type')).to.include('text/plain');\r",
									"});\r",
									"pm.test(\"Response time is less than 3000ms\", () => {\r",
									"pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"//set variable with token to be used in later interactions\r",
									"pm.collectionVariables.set(\"token\", responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"me2\",\r\n  \"password\": \"changeit\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://authuser-cicd:8080/user/login",
							"protocol": "http",
							"host": [
								"authuser-cicd"
							],
							"port": "8080",
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "03 - Todolist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});\r",
									"pm.test(\"Response time is less than 3000ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"me2\",\r\n  \"description\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://todolist-cicd:8080/todolist",
							"protocol": "http",
							"host": [
								"todolist-cicd"
							],
							"port": "8080",
							"path": [
								"todolist"
							]
						}
					},
					"response": []
				},
				{
					"name": "04 - TodoList/joe",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});\r",
									"pm.test(\"Response time is less than 3000ms\", () => {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "http://todolist-cicd:8080/todolist/me2",
							"protocol": "http",
							"host": [
								"todolist-cicd"
							],
							"port": "8080",
							"path": [
								"todolist",
								"me2"
							]
						}
					},
					"response": []
				},
				{
					"name": "05 - RABBITMQ - Check existing",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"setTimeout(function(){}, 20000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Test assume an empty database and empty queue\r",
									"//convert response to json\r",
									"let jsonData = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"pm.response.to.have.status(200);\r",
									"});\r",
									"//check if json is an array\r",
									"pm.test(\"Queues status\", () => {\r",
									"pm.expect(jsonData).to.be.an(\"array\");\r",
									"});\r",
									"//check if any queue has 1 message\r",
									"pm.test(\"The notification_response queue contains exactly 1 message\", () => {\r",
									"var res = jsonData.find(item => item.backing_queue_status.len === 1)\r",
									"pm.expect(typeof res !== \"undefined\").to.be.true;\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "guest",
									"type": "string"
								},
								{
									"key": "username",
									"value": "guest",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://rabbit-cicd:15672/api/queues",
							"protocol": "http",
							"host": [
								"rabbit-cicd"
							],
							"port": "15672",
							"path": [
								"api",
								"queues"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}